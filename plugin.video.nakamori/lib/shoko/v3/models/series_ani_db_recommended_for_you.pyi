# coding: utf-8

"""
    Shoko API 3

    Shoko Server API.  # noqa: E501

    The version of the OpenAPI document: 3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from lib.shoko.v3 import schemas  # noqa: F401


class SeriesAniDBRecommendedForYou(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The result entries for the "Recommended For You" algorithm.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def Anime() -> typing.Type['SeriesAniDBWithDate']:
                return SeriesAniDBWithDate
            SimilarTo = schemas.Int32Schema
            __annotations__ = {
                "Anime": Anime,
                "SimilarTo": SimilarTo,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Anime"]) -> 'SeriesAniDBWithDate': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SimilarTo"]) -> MetaOapg.properties.SimilarTo: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Anime"], typing_extensions.Literal["SimilarTo"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Anime"]) -> typing.Union['SeriesAniDBWithDate', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SimilarTo"]) -> typing.Union[MetaOapg.properties.SimilarTo, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Anime"], typing_extensions.Literal["SimilarTo"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        Anime: typing.Union['SeriesAniDBWithDate', schemas.Unset] = schemas.unset,
        SimilarTo: typing.Union[MetaOapg.properties.SimilarTo, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'SeriesAniDBRecommendedForYou':
        return super().__new__(
            cls,
            *_args,
            Anime=Anime,
            SimilarTo=SimilarTo,
            _configuration=_configuration,
        )

from lib.shoko.v3.lib.shoko.v3.models.series_ani_db_with_date import SeriesAniDBWithDate
