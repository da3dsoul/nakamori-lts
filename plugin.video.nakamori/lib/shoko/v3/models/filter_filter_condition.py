# coding: utf-8

"""
    Shoko API 3

    Shoko Server API.  # noqa: E501

    The version of the OpenAPI document: 3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from lib.shoko.v3 import schemas  # noqa: F401


class FilterFilterCondition(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "Operator",
            "Type",
        }
        
        class properties:
        
            @staticmethod
            def Type() -> typing.Type['EnumsGroupFilterConditionType']:
                return EnumsGroupFilterConditionType
        
            @staticmethod
            def Operator() -> typing.Type['EnumsGroupFilterOperator']:
                return EnumsGroupFilterOperator
            
            
            class Parameter(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'Parameter':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "Type": Type,
                "Operator": Operator,
                "Parameter": Parameter,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    Operator: 'EnumsGroupFilterOperator'
    Type: 'EnumsGroupFilterConditionType'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Operator"]) -> 'EnumsGroupFilterOperator': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Type"]) -> 'EnumsGroupFilterConditionType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Parameter"]) -> MetaOapg.properties.Parameter: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Operator"], typing_extensions.Literal["Type"], typing_extensions.Literal["Parameter"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Operator"]) -> 'EnumsGroupFilterOperator': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Type"]) -> 'EnumsGroupFilterConditionType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Parameter"]) -> typing.Union[MetaOapg.properties.Parameter, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Operator"], typing_extensions.Literal["Type"], typing_extensions.Literal["Parameter"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        Operator: 'EnumsGroupFilterOperator',
        Type: 'EnumsGroupFilterConditionType',
        Parameter: typing.Union[MetaOapg.properties.Parameter, None, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FilterFilterCondition':
        return super().__new__(
            cls,
            *_args,
            Operator=Operator,
            Type=Type,
            Parameter=Parameter,
            _configuration=_configuration,
        )

from lib.shoko.v3.lib.shoko.v3.models.enums_group_filter_condition_type import EnumsGroupFilterConditionType
from lib.shoko.v3.lib.shoko.v3.models.enums_group_filter_operator import EnumsGroupFilterOperator
