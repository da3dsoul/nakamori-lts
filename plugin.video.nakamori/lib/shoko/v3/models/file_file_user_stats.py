# coding: utf-8

"""
    Shoko API 3

    Shoko Server API.  # noqa: E501

    The version of the OpenAPI document: 3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from lib.shoko.v3 import schemas  # noqa: F401


class FileFileUserStats(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    User stats for the file.
    """


    class MetaOapg:
        
        class properties:
            
            
            class ResumePosition(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-span'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ResumePosition':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            WatchedCount = schemas.Int32Schema
            
            
            class LastWatchedAt(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'LastWatchedAt':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            LastUpdatedAt = schemas.DateTimeSchema
            __annotations__ = {
                "ResumePosition": ResumePosition,
                "WatchedCount": WatchedCount,
                "LastWatchedAt": LastWatchedAt,
                "LastUpdatedAt": LastUpdatedAt,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ResumePosition"]) -> MetaOapg.properties.ResumePosition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["WatchedCount"]) -> MetaOapg.properties.WatchedCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LastWatchedAt"]) -> MetaOapg.properties.LastWatchedAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LastUpdatedAt"]) -> MetaOapg.properties.LastUpdatedAt: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["ResumePosition"], typing_extensions.Literal["WatchedCount"], typing_extensions.Literal["LastWatchedAt"], typing_extensions.Literal["LastUpdatedAt"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ResumePosition"]) -> typing.Union[MetaOapg.properties.ResumePosition, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["WatchedCount"]) -> typing.Union[MetaOapg.properties.WatchedCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LastWatchedAt"]) -> typing.Union[MetaOapg.properties.LastWatchedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LastUpdatedAt"]) -> typing.Union[MetaOapg.properties.LastUpdatedAt, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["ResumePosition"], typing_extensions.Literal["WatchedCount"], typing_extensions.Literal["LastWatchedAt"], typing_extensions.Literal["LastUpdatedAt"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        ResumePosition: typing.Union[MetaOapg.properties.ResumePosition, None, str, schemas.Unset] = schemas.unset,
        WatchedCount: typing.Union[MetaOapg.properties.WatchedCount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LastWatchedAt: typing.Union[MetaOapg.properties.LastWatchedAt, None, str, datetime, schemas.Unset] = schemas.unset,
        LastUpdatedAt: typing.Union[MetaOapg.properties.LastUpdatedAt, str, datetime, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FileFileUserStats':
        return super().__new__(
            cls,
            *_args,
            ResumePosition=ResumePosition,
            WatchedCount=WatchedCount,
            LastWatchedAt=LastWatchedAt,
            LastUpdatedAt=LastUpdatedAt,
            _configuration=_configuration,
        )
